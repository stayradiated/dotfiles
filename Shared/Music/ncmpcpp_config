ncmpcpp_directory = "~/.ncmpcpp"
lyrics_directory = "~/.lyrics"

##### connection settings #####

mpd_host = "localhost"
mpd_port = "1337"
mpd_music_dir = "~/Projects/Groovy/cache"
mpd_connection_timeout = "5"
mpd_crossfade_time = "5"

playlist_disable_highlight_delay = "5"

##### song format #####
##
## for song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## you can also put them in { } and then it will be displayed
## only if all requested values are available and/or define alternate
## value with { }|{ } eg. {%a - %t}|{%f}
##
## Note: If you want to set limit on maximal length of a tag, just
## put the appropriate number between % and character that defines
## tag type, e.g. to make album take max. 20 terminal cells, use '%20b'.
##
## Note: Format that is similar to "%a - %t" (i.e. without any additional
## braces) is equal to "{%a - %t}", so if one of the tags is missing,
## you'll get nothing.
##
## text can also have different color than the main window has,
## eg. if you want length to be green, write $3%l$9
##
## available values:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
##
## Note: colors can be nested.
##

#song_list_format = "{%a - }{%t}|{$8%f$9}$R{$3(%l)$9}"
song_list_format = "$8%l$9 $1│$9 $4%20a$9 $1│$9 $2%t$9 $1│$9 $8$R%b$9"

#song_status_format = "{{%a{ \"%b\"{ (%y)}} - }{%t}}|{%f}"
song_status_format = "{%a - }{%t - }{%b}"

#song_library_format = "{%n - }{%t}|{%f}"
song_library_format = "{%n > }{%t}│{%f}"

tag_editor_album_format = "{(%y) }%b"

##
## Note: Below variables are used for sorting songs in browser.
## The sort mode determines how songs are sorted, and can be used
## in combination with a sort format to specify a custom sorting format.
## Possible values for browser_sort_mode are "name", "mtime" and "format".
##

browser_sort_mode = "name"
browser_sort_format = "{%a - }{%t}|{%f} {(%l)}"

##
## Note: Below variables are for alternative version of user's interface.
## Their syntax supports all tags and colors listed above plus some extra
## markers used for text attributes. They are followed by character '$'.
## After that you can put:
##
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use an attribute anymore, just put it again, but
## this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename
## with reversed colors.
##

alternative_header_first_line_format = "$b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b"
alternative_header_second_line_format = "{{$4$b%a$/b$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}"

##
## Note: Below variables also supports
## text attributes listed above.
##
#
now_playing_prefix = "$b"
now_playing_suffix = "$/b"
browser_playlist_prefix = "$2plist »$9 "
selected_item_prefix = "$b"
selected_item_suffix = "$/b"

modified_item_prefix = "$3> $9"

## colors are not supported for below variable
song_window_title_format = "MPD: {%a > }{%t}{ [%b{ Disc %d}]}|{%f}"

##### columns settings #####
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of column)[column's color]{displayed tag}
##
## Note: Width is by default in %, if you want a column to
## have fixed size, add 'f' after the value, e.g. (10)[white]{a}
## will be the column that take 10% of screen (so the real column's
## width will depend on actual screen size), whereas (10f)[white]{a}
## will take 10 terminal cells, no matter how wide the screen is.
##
## - color is optional (if you want the default one, type [])
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes,
##   separated with character ':', e.g. {lr:Length} gives you
##   right aligned column of lengths named "Length".
##
## - define sequence of tags, that have to be displayed in case
##   predecessor is empty in a way similar to the one in classic
##   song format, i.e. using '|' character, e.g. {a|c|p:Owner}
##   creates column named "Owner" that tries to display artist
##   tag and then composer and performer if previous ones are
##   not available.
##

#song_columns_list_format = "(7f)[green]{l} (25)[cyan]{a} (40)[]{t|f} (30)[red]{b}"
song_columns_list_format = "(7f)[white]{l} (30)[blue]{t} (30)[green]{a} (30)[cyan]{b}"

##### various settings #####

##
## Note: Custom command that will be executed each
## time song changes. Useful for notifications etc.
##
## Attention: It doesn't support song format anymore.
## Use `ncmpcpp --now-playing SONG_FORMAT` instead.
##

execute_on_song_change = ""
playlist_show_remaining_time = "no"
playlist_shorten_total_times = "no"
playlist_separate_albums = "no"

playlist_display_mode = "columns" (classic/columns)
browser_display_mode = "columns" (classic/columns)
search_engine_display_mode = "columns" (classic/columns)
playlist_editor_display_mode = "columns" (classic/columns)

discard_colors_if_item_is_selected = "no"

incremental_seeking = "yes"
seek_time = "1"
volume_change_step = "1"
autocenter_mode = "yes"
centered_cursor = "yes"

##
## Note: You can specify third character which will
## be used to build 'empty' part of progressbar.
##

progressbar_look = "─  "
progressbar_boldness = "no"
default_place_to_search_in = "database" (database/playlist)
user_interface = "classic" (classic/alternative)
media_library_left_column = "a" (possible values: a,y,g,c,p, legend above)
default_find_mode = "wrapped" (wrapped/normal)
default_space_mode = "add" (add/select)
default_tag_editor_pattern = "%n - %t"

header_visibility = "no"
statusbar_visibility = "no"
titles_visibility = "no"
header_text_scrolling = "yes"

# fancy_scrolling = "yes"
cyclic_scrolling = "no"
lines_scrolled = "1"

follow_now_playing_lyrics = "no"
fetch_lyrics_for_current_song_in_background = "no"
store_lyrics_in_song_dir = "no"
generate_win32_compatible_filenames = "yes"

##
## Note: If you set this variable, ncmpcpp will try to
## get info from last.fm in language you set and if it
## fails, it will fall back to english. Otherwise it will
## use english the first time.
##
## Note: Language has to be expressed as an ISO 639 alpha-2 code.
##

lastfm_preferred_language = ""
ncmpc_like_songs_adding = "no" (enabled - add/remove, disabled - always add)
show_hidden_files_in_local_browser = "no"
# display_screens_numbers_on_start = "no"
#
##
## How shall key_screen_switcher work?
##
## - "previous" - switch between current and last used screen
## - "sequence: 2 -> 9 -> 5" - switch between given sequence of screens.
##
## Screen numbers you can use after 'sequence' keyword are:
##
## - 1 - help
## - 2 - playlist
## - 3 - browser
## - 4 - search engine
## - 5 - media library
## - 6 - playlist editor
## - 7 - tag editor
## - 8 - outputs
## - 9 - visualizer
## - 10 - clock
##
## As you can see, above example will switch between
## playlist, visualizer and media library screens.
##

screen_switcher_mode = "sequence: 2 -> 3"

##
## Default width of locked screen (in %).
## Acceptable values are from 20 to 80.
##

locked_screen_width_part = "50"
ask_for_locked_screen_width_part = "yes"

##
## Note: You can define startup screen for ncmpcpp
## by choosing screen number from the list above.
##

startup_screen = "2"
jump_to_now_playing_song_at_start = "yes"
ask_before_clearing_main_playlist = "no"
clock_display_seconds = "no"
display_volume_level = "yes"
display_bitrate = "no"
display_remaining_time = "no"
regular_expressions = "none" (none/basic/extended)

##
## Note: If below is enabled, ncmpcpp will ignore leading
## "The" word while sorting items in browser, tags in
## media library, etc.
##

ignore_leading_the = "no"
block_search_constraints_change_if_items_found = "yes"
mouse_support = "yes"
mouse_list_scroll_whole_page = "yes"
empty_tag_marker = "<empty>"
tags_separator = " | "
tag_editor_extended_numeration = "no"
media_library_sort_by_mtime = "no"
enable_window_title = "yes"

##
## Note: You can choose default search mode for search
## engine. Available modes are:
##
## - 1 - use mpd built-in searching (no regexes, pattern matching)
## - 2 - use ncmpcpp searching (pattern matching with support for regexes,
##       but if your mpd is on a remote machine, downloading big database
##       to process it can take a while
## - 3 - match only exact values (this mode uses mpd function for searching
##       in database and local one for searching in current playlist)
##

search_engine_default_search_mode = "1"
external_editor = "vim"
use_console_editor = "yes" (set to yes, if your editor is console app)

##### colors definitions #####

colors_enabled = "yes"
empty_tag_color = "cyan"
header_window_color = "black"
volume_color = "cyan"
state_line_color = "black"
state_flags_color = "green"
main_window_color = "blue"
color1 = "cyan"
color2 = "black"
main_window_highlight_color = "red"
progressbar_color = "black"
progressbar_elapsed_color = "red"
statusbar_color = "white"
alternative_ui_separator_color = "black"
active_column_color = "red"
visualizer_color = "yellow"
window_border_color = "green"
active_window_border = "red"

