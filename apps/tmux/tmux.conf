# Ring the bell if any background window rang a bell
set -g bell-action any

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# 256 colors
set -g default-terminal "screen-256color"

# Create splits and vertical splits
bind-key v split-window -h -c "#{pane_current_path}"
bind-key ^V split-window -h -c "#{pane_current_path}"
bind-key s split-window -c "#{pane_current_path}"
bind-key ^S split-window -c "#{pane_current_path}"

# send pane to another window
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
send_hjkl="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(weechat|view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$send_hjkl" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$send_hjkl" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$send_hjkl" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$send_hjkl" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$send_hjkl" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

set -g status-left-length 70
set -g status-left "#[fg=colour0,bg=colour7] #S "

set -g status-right-length 100
set -g status-right "#(tmux-status)"

# color scheme
set -g status-fg white
set -g status-bg colour0
set -g pane-border-fg colour0
set -g pane-active-border-fg colour10
set -g message-fg colour1
set -g message-bg colour15
set -g window-status-format "#[fg=colour235,bg=colourw4] #I: #W "
set -g window-status-current-format "#[fg=colour15,bg=colour4] #I: #W "

# Screen like binding
unbind C-b
set -g prefix C-a
unbind-key C-a
bind C-a send-prefix

# Auto renumber windows
set -g renumber-windows on

# fix escape key in vim
set -s escape-time 0

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Jump to previous prompt
bind-key b copy-mode\;\
           send-keys -X start-of-line\;\
           send-keys -X search-backward "Â»"

# Display status bar at top of screen
set -g status-position top

# Enable the mouse
# set-option -g -q mouse on

# Force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-urlview'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
