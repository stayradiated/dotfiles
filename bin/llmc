#!/usr/bin/env zsh

system_prompt='Output a command that I can run in a ZSH terminal on Ubuntu 22.04 to accomplish the following task. Try to make the command self-documenting, using the long version of flags where possible. Output the command first enclosed in a "```zsh" codeblock followed by a concise explanation of how it accomplishes it.'
temp_file=$(mktemp)
capturing=true
command_buffer=""
first_line=true
cleaned_up=false # Flag to indicate whether cleanup has been run

cleanup() {
    # Only run cleanup if it hasn't been done yet
    if [[ "$cleaned_up" == false ]]; then
        cleaned_up=true # Set the flag to prevent duplicate cleanup

        # Check if the temporary file exists before attempting to read from it
        if [[ -f "$temp_file" ]]; then
            while IFS= read -r line; do
                if [[ "$line" == '```zsh' ]]; then
                    command_buffer=""
                    first_line=true
                elif [[ "$line" == '```' && "$capturing" == true ]]; then
                    if [[ "$first_line" == true ]]; then
                        echo -n "$command_buffer" | pbcopy
                    else
                        echo -n "${command_buffer//$'\n'/\\n}" | pbcopy
                    fi
                    break
                elif [[ "$capturing" == true ]]; then
                    if [[ "$first_line" == false ]]; then
                        command_buffer+=$'\n'
                    fi
                    command_buffer+="$line"
                    first_line=false
                fi
            done <"$temp_file"
        fi

        # Always attempt to remove the temporary file if it exists
        [[ -f "$temp_file" ]] && rm "$temp_file"

        # Reset the signal trap to the default behavior to clean up resources
        trap - SIGINT
    fi
}

# Set the trap for cleanup on SIGINT
trap cleanup SIGINT

llm -m gpt-4-turbo -s "$system_prompt" "$1" | tee >(cat >"$temp_file")

# Ensure cleanup is performed if not already done by trap
cleanup
