#!/usr/bin/env zsh

# Path to the docker-compose file
COMPOSE_DIR="/home/admin/dotfiles/apps/nix"
COMPOSE_FILE="$COMPOSE_DIR/docker-compose.yml"

# Function to show usage
show_help() {
  cat << EOF
Usage: nixd [OPTION]

A utility script to manage and connect to a Nix environment in Docker.

Options:
  start       Start the Nix container (default if no option provided)
  stop        Stop the Nix container
  restart     Restart the Nix container
  status      Show the status of the Nix container
  logs        Show logs from the Nix container
  clean       Remove the container (preserves volumes)
  purge       Remove the container and all volumes
  help        Show this help message

With no arguments, the script starts the container if needed and connects to it.
EOF
}

# Make sure we're in the right directory
cd "$COMPOSE_DIR" || {
  echo "Error: Could not find directory $COMPOSE_DIR"
  exit 1
}

# Check if the docker-compose file exists
if [[ ! -f "$COMPOSE_FILE" ]]; then
  echo "Error: Docker Compose file not found at $COMPOSE_FILE"
  exit 1
fi

# Parse command-line arguments
case "$1" in
  start)
    docker compose up -d
    echo "Nix environment started. Use 'nixd' with no arguments to connect."
    ;;
  stop)
    docker compose down
    echo "Nix environment stopped."
    ;;
  restart)
    docker compose restart
    echo "Nix environment restarted. Use 'nixd' with no arguments to connect."
    ;;
  status)
    echo "Nix environment status:"
    docker compose ps
    ;;
  logs)
    docker compose logs
    ;;
  clean)
    docker compose down
    echo "Nix container removed. Volumes are preserved."
    ;;
  purge)
    docker compose down -v
    echo "Nix container and all volumes removed."
    ;;
  help)
    show_help
    ;;
  "")
    # Default behavior: ensure container is running and connect
    if ! docker compose ps | grep -q "nix-environment.*Up"; then
      echo "Starting Nix environment..."
      docker compose up -d
    fi

    # Connect to the running container
    echo "Connecting to Nix shell..."
    docker compose exec nix bash 2>/dev/null || docker compose exec nix bash

    # If the exec command fails, try to restart and connect
    if [[ $? -ne 0 ]]; then
      echo "Container not responsive, restarting..."
      docker compose restart
      echo "Connecting to Nix shell..."
      docker compose exec nix bash 2>/dev/null || docker compose exec nix bash
    fi
    ;;
  *)
    echo "Error: Unknown option '$1'"
    show_help
    exit 1
    ;;
esac
